name: release

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  build_and_release:
    concurrency:
      group: ${{ github.workflow }}
    runs-on: windows-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    outputs:
      version: ${{ steps.semantic-release.outputs.new_release_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main
          persist-credentials: false

      - name: Switch to Node.js 14
        uses: actions/setup-node@v4
        with:
          node-version: 14

      - name: Semantic Release
        id: semantic-release
        uses: cycjimmy/semantic-release-action@v3
        with:
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
            @semantic-release/github
            @semantic-release/exec
            @google/semantic-release-replace-plugin@1.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_SEMANTIC_RELEASE }}

  publish-docker-image:
    runs-on: ubuntu-latest
    needs: build_and_release
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main
          persist-credentials: false

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Docker tags
        id: docker_tags
        run: |
          TAGS="cahaseler/empact:latest"
          if [ -n "${{ needs.build_and_release.outputs.version }}" ]; then
            TAGS="$TAGS,cahaseler/empact:${{ needs.build_and_release.outputs.version }}"
          fi
          echo "tags=$TAGS" >> $GITHUB_OUTPUT

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./web
          push: true
          tags: ${{ steps.docker_tags.outputs.tags }}
          cache-from: type=registry,ref=cahaseler/empact:buildcache
          cache-to: type=registry,ref=cahaseler/empact:buildcache,mode=max
